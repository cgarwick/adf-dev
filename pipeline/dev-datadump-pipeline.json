{
	"name": "dev-datadump-pipeline",
	"properties": {
		"activities": [
			{
				"name": "GetFiles",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DataDump",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "FilterFiles",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFiles').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(\n  substring(item().name, sub(length(item().name), 12), 8),\n  formatDateTime(addHours(utcNow(), -8), 'yyyyMMdd')\n)\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "GetFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFiles').output.childItems\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "DebugOutput",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DebugOutput",
								"value": "@string(item())\n"
							}
						}
					]
				}
			}
		],
		"variables": {
			"DebugOutput": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}